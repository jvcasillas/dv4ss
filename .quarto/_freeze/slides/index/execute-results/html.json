{
  "hash": "81d5236d0b819d95d85dd558693736a8",
  "result": {
    "markdown": "---\ntitle: \"Data visualization for linguists\"\nsubtitle: \"\"\nauthor: \"Joseph V. Casillas | Rutgers University\"\ninstitute: \"14th Pronunciation in Second Langauge Learning and Teaching<br>Purdue University\"\ndate: \"2023/09/06 (Last update: 2023-09-09)\"\nformat: rutgers-revealjs\nengine: knitr\nbibliography: ../bib/refs.bib\n---\n\n\n\n\n## Follow along\n\n::::: {layout=\"[[-1], [1], [-1]]\"}\n:::: {.columns}\n::: {.column width=\"33%\"}\n:::\n::: {.column width=\"33%\"}\n\n{{< qrcode https://www.jvcasillas.com/dv4ss/index.html qrsite width=300 height=300 colorDark='#cc0033' colorLight='#fff' >}}\n\n\n:::\n::: {.column width=\"33%\"}\n:::\n::::\n:::::\n\n---\n\n\n\n\n\n\n## How to use this workshop\n\n. . .\n\n::: {.r-fit-text}\nDo you know R?\n:::\n\n. . .\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n[Yes]{style=\"color: blue;\"}\n\n- Follow along, do examples\n- Watch\n- Both (as attention allows)\n:::\n\n::: {.column width=\"50%\"}\n[No]{.emph}\n\n- Watch\n- Come back when time and resources allow\n:::\n::::\n\n\n\n\n\n\n\n# Goals {.transition}\n\n## {.transition data-menu-title=\"Goals (as researchers)\"}\n\n[Goals (as researchers)]{.emph}\n\n::: {.r-fit-text}\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\nmake elegant, truthful plots\n:::\n:::\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\nhelp reader understand data\n:::\n:::\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\nmake process repeatable, shareable\n:::\n:::\n\n:::\n\n## Goals (today)\n\n::: {.r-fit-text}\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\nget you started making elegant, <br>truthful plots\n:::\n:::\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\ndiscuss pitfalls, bad practices\n:::\n:::\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\nprovide resources to help you <br>continue learning\n:::\n:::\n\n:::\n\n\n\n\n\n\n\n# {.transition data-menu-title=\"Speak for yourself\"}\n\nJust use a table...  \nthe data speaks for itself...\n\n## {background-color=\"black\" background-image=\"./assets/img/dino_data.gif\" background-size=\"contain\" data-menu-title=\"The datasaurus\"}\n\n::: footer\n[datasaurus: same stats, different graph](https://www.research.autodesk.com/publications/same-stats-different-graphs/)\n:::\n\n## {.transition data-menu-title=\"Liars\"}\n\n<br><br><br>\n\n\"Stats don't lie, but liars use stats\"  \n\"The numbers don't lie, but liars use numbers\"  \n[(same idea)]{style=\"color: grey;\"}\n\n\n\n\n\n\n# It's not easy...\n\n## {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/rstats/memes/os_heartbreak.png\" data-menu-title=\"Be kind\"}\n\n::: {.notes}\n- getting good takes time\n- be patient\n- be kind to yourself\n- do the best you can at the time\n:::\n\n## {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/general/memes/sucking1.png\" background-size=90% data-menu-title=\"Sucking...\"}\n\n::: {.notes}\nits ok to suck\n:::\n\n## {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/general/memes/draw_owl.png\" background-size=65% data-menu-title=\"Drawing the owl\"}\n\n## {data-menu-title=\"Choose your fighter\"}\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-flexibility-difficulty-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n## {data-menu-title=\"Learning process\"}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n::: {.r-stack}\n![](./index_files/figure-revealjs/p-goals-1-1){width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-2-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-3-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-4-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-5-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-6-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-7-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-8-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-9-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-10-1){.fragment width=\"100%\" height=\"100%\"}\n:::\n:::\n\n## {background-image=\"./assets/img/bad_plot_0.png\" background-size=\"contain\" data-menu-title=\"The ugliest plot in the world\"}\n\n\n\n\n\n\n\n# Some principles of graphic design\n\n[ðŸ’©]{style=\"font-size: 2em;\"}\n\n## CRAP ðŸ’©\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n[C]{.emph style=\"font-size: 2.5em;\"}[ontrast]{style=\"font-size: 2.5em;\"}  \n[R]{.emph style=\"font-size: 2.5em;\"}[epetition]{style=\"font-size: 2.5em;\"}  \n[A]{.emph style=\"font-size: 2.5em;\"}[lignment]{style=\"font-size: 2.5em;\"}  \n[P]{.emph style=\"font-size: 2.5em;\"}[roximity]{style=\"font-size: 2.5em;\"}\n:::\n::: {.column width=\"50%\"}\n![](./assets/img/non_designers.png){.absolute top=100 right=10 width=\"350\" height=\"500\"}\n\n[@williams2015]{.absolute bottom=5 right=10}\n:::\n::::\n\n## Contrast\n\nIf two things aren't the same, make them *very* different\n\n. . .\n\n- Colors\n  - complex\n  - accessibility for color blindness (color.adobe.com)\n\n- Fonts\n  - weight\n  - size\n  - family\n\n- Shapes\n\n\n## {data-menu-title=\"Contrast ex.\"}\n\n::::: {layout=\"[[-1], [1], [-1]]\"}\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/contrast-ex1-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/contrast-ex2-1.png){width=100%}\n:::\n:::\n\n:::\n::::\n:::::\n\n---\n\n## Repetition\n\nRepeat *themes* throughout doc, presentation, article, etc.\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n<br>\n\n- Colors palettes\n- Fonts (families, weights, sizes)\n- Other graphical elements (alignments, etc.)\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/contrast-repeat-1.png){width=100%}\n:::\n:::\n\n:::\n::::\n\n## Alignment\n\nElements on page/screen/plot have visual connection with something else on page/screen/plot\n\n::: {.r-stack}\n![](./assets/img/alignment_0.png){.fragment width=\"70%\" height=\"70%\" .absolute top=205 right=200}\n\n![](./assets/img/alignment_1.png){.fragment width=\"70%\" height=\"70%\" .absolute top=205 right=200}\n\n![](./assets/img/alignment_2.png){.fragment width=\"70%\" height=\"70%\" .absolute top=205 right=200}\n:::\n\n::: footer\nHeiss (2023)\n:::\n\n## Proximity\n\nGroup related items together\n\n- Focus on document layout\n\n- Probably less applicable to dataviz\n\n## {.transition data-menu-title=\"You can learn to CRAP ðŸ’©\"}\n\n<br><br><br><br>\n[You can learn to CRAP ðŸ’©]{style=\"font-size: 1.5em;\"}\n\n::: notes\nlearnable\ntakes practice\n:::\n\n\n\n\n\n\n\n# Example plots\n\n## Common types of plots\n\n- Pie charts\n- Bar graphs\n- Boxplots  \n- Historgrams, density plots\n- Scatterplots  \n- Heatmaps\n- Etc.\n\n## Pie charts {background-image=\"./assets/img/plots_pie.png\" background-size=contain background-color=\"black\"}\n\n## Bar graphs {visibility=\"uncounted\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/bargraph-ex-1.png){width=100%}\n:::\n:::\n\n\n## {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/rstats/memes/rstats_bargraphs.png\" background-size=\"50%\" background-color=\"black\" data-menu-title=\"Bar graph push back\" visibility=\"uncounted\"}\n\n## Boxplots {visibility=\"uncounted\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/boxplot-ex-1.png){width=100%}\n:::\n:::\n\n\n## Historgrams, density plots {visibility=\"uncounted\"}\n\n::::: {layout=\"[[-1], [1], [-1]]\"}\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/histogram-ex-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/density-ex-1.png){width=100%}\n:::\n:::\n\n:::\n::::\n:::::\n\n## Scatterplots {visibility=\"uncounted\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/scatter-plot-ex-1.png){width=100%}\n:::\n:::\n\n\n## Heatmaps {visibility=\"uncounted\"}\n\n::: {.r-stack}\n![](./assets/img/plot_heatmap_0.png){.absolute top=150 right=60 width=\"80%\"}\n\n![](./assets/img/plot_heatmap_1.png){.fragment .absolute top=65 right=65 width=\"80%\"}\n:::\n\n\n\n\n\n\n\n\n# Grammar of graphics\n\n## What you need to know\n\n![](./assets/img/gog.png){.absolute top=100 right=0 height=75%}\n\n[@wilkinson2012grammar]{.absolute bottom=5 right=10}\n\nWe are interested in mapping <br>**data** to **aesthetics**\n\n. . .\n\n[What is data?]{style=\"color: blue;\"}\n\n- a column(s) in a dataframe <br>(excel, .csv, .tsv, etc.)\n\n. . .\n\n[Aesthetics?]{style=\"color: blue;\"}\n\n- a visual property of a plot, <br>i.e., position, shape, color, etc.\n\n\n\n\n\n\n# {background-color=\"black\" data-menu-title=\"ggplot2\" background-image=\"https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/tidyverse.png\" background-size=\"45%\"}\n\n![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png){.absulute top=400 left=0 width=\"20%\" height=\"20%\"}\n\n## {background-image=\"./assets/img/ggplot_layers.png\" background-size=\"contain\" data-menu-title=\"GoG applied - ggplot2\"}\n\n## ggplot2 overview\n\n- Written by Hadley Wickham when he was a graduate student at Iowa State\n\n- Automatically deals with spacings, text, titles but also allows you to annotate by \"adding\"\n\n- Plots are built up in layers \n\n- Plot the data, overlay a summary, meta data and/or annotation\n\n## Components\n\n- Works with a dataframe\n\n- aesthetic mappings: how data are mapped to coordinates, color, size, shape, etc.\n\n- geoms: geometric objects like points, lines, boxplots, etc. \n\n- stats: statistical transformations\n\n- facets: 'panels' for conditional plots\n\n## {data-menu-title=\"Back to the chicks...\"}\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/chicks-repeat-1.png){width=100%}\n:::\n:::\n\n:::\n\n## {data-menu-title=\"Data to aesthetic mapping\"}\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n| Data   | Aesthetic    | Geometry     |\n| :----- | :----------- | :----------- | \n| Time   | x-axis       | point, line  |\n| Weight | y-axis       | point, line  |\n| Chick  | point        | point, line  |\n| Diet   | color, shape | point, shape |\n\n:::\n\n## {data-menu-title=\"Aesthetic to geom mapping\"}\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n| Data   | aes()        | geom_\\*    |\n| :----- | :----------- | :--------- | \n| Time   | x            | geom_point |\n| Weight | y            | geom_point |\n| Chick  | color        | geom_point |\n| Diet   | color, shape | geom_point + geom_line |\n\n:::\n\n## A template...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  data = DATA_FRAME, \n  mapping = aes(AESTHETIC)\n) + \n  geom_xxx()\n```\n:::\n\n\n. . .\n\n- **DATA_FRAME** will be replaced with your dataframe\n- **AESTHETIC** will be replaced with the aesthetic mappings of your choice\n- **geom_xxx** will be replaced with a specific geom, i.e., `geom_point()`\n\n## It starts with data\n\n- Let's take a look at a dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlink <- url(\"https://github.com/jvcasillas/dv4ss/raw/main/misc/new_data.RDS\")\nnew_data <- readRDS(link)\n```\n:::\n\n\n- Try using `head(new_data)` and `summary(new_data)`\n\n- What kind of information did you learn about the dataframe?\n\n## Get to know the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(new_data) # show first 6 rows\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  score proficiency       group    age\n1  0.45        0.57   bilingual  older\n2  0.45        0.57   bilingual  older\n3  0.53        0.47   bilingual  young\n4  0.47       -0.97 monolingual  older\n5  0.35       -0.84 monolingual oldest\n6  0.33       -1.56 monolingual  older\n```\n:::\n:::\n\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(new_data) # get general summary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     score         proficiency          group               age    \n Min.   :0.0000   Min.   :-1.56000   Length:32          young :11  \n 1st Qu.:0.2150   1st Qu.:-0.97000   Class :character   older : 7  \n Median :0.3700   Median : 0.18000   Mode  :character   oldest:14  \n Mean   :0.4122   Mean   :-0.00125                                 \n 3rd Qu.:0.5300   3rd Qu.: 0.60000                                 \n Max.   :1.0000   Max.   : 2.49000                                 \n```\n:::\n:::\n\n\n## Aesthetics (aes()) {.smaller}\n\n- Aesthetic mappings: how we map data to color, size, and **axis**...\n\n- Let's update our template\n\n::::{.columns}\n:::{.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(\n  data = new_data, \n  mapping = aes(x = proficiency, y = score)\n) \n```\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/aes-ex-p-1.png){width=100%}\n:::\n:::\n\n:::\n::::\n\n## Geometric objects (geom_\\*) {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  data = new_data, \n  mapping = aes(x = proficiency, y = score)\n) + \n  geom_point()\n```\n:::\n\n\nThere are many types of geoms...\n\n- geom_point()\n- geom_smooth()\n- geom_hist()\n- geom_bar()\n- geom_boxplot()\n- etc. \n\n## Statistical transformations (stat_\\*)\n\n- `stat_summary()` will calculate a value (e.g., mean, median) and overlay it\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5-7\"}\nggplot(\n  data = new_data, \n  mapping = aes(x = group, y = score)\n) + \n  stat_summary(\n    fun.data = mean_sdl, \n    geom = 'pointrange'\n  )\n```\n:::\n\n\n\n\n\n\n\n# Walkthrough with [ggplot2]{style=\"color: blue;\"} {.transition}\n\n![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png){.absolute top=200 right=0 width=400\" height=\"400\"}\n\n## Let's revist some basic plots\n\n- Histogram\n\n- Scatterplots\n\n- Boxplots\n\n- Point estimate + spread\n\n## Histogram {.smaller}\n\n::: {.panel-tabset}\n\n### Beginner\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3|4|6\"}\n# Continuous variable on the x-axis\nggplot(\n  data = new_data, \n  mapping = aes(x = score)\n) + \n  geom_histogram() \n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-histogram-ex-beg-1.png){width=100%}\n:::\n:::\n\n\n### Intermediate\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Streamline code and adjust options\nggplot(new_data) + \n  aes(x = score) + \n  geom_histogram(\n    color = \"black\", \n    fill = \"grey70\", \n    bins = 9\n  ) + \n  theme_bw(\n    base_size = 30, \n    base_family = \"Palatino\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-histogram-ex-int-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n## Scatterplot {.smaller}\n\n::: {.panel-tabset}\n\n### Beginner\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"3|4|6\"}\n# Continuous variables on both axis\nggplot(\n  data = new_data, \n  mapping = aes(x = proficiency, y = score)\n) + \n  geom_point() \n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-scatterplot-ex-beg-1.png){width=100%}\n:::\n:::\n\n\n### Intermediate\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Include aesthetic mapping from inside\n# geom_point()\nggplot(new_data) + \n  aes(x = proficiency, y = score) + \n  geom_point(aes(color = group), size = 4) + \n  theme_minimal(\n    base_size = 30, \n    base_family = \"Palatino\"\n  ) + \n  theme(legend.position = c(.15, .85))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-scatterplot-ex-int-1.png){width=100%}\n:::\n:::\n\n\n### Advanced\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Adjust colors\n# Add regression line\nggplot(new_data) + \n  aes(x = proficiency, y = score) + \n  geom_point(\n    aes(fill = group), \n    size = 4, pch = 21\n  ) + \n  geom_smooth(method = lm, formula = \"y ~ x\") + \n  scale_fill_viridis_d(\n    name = NULL, \n    option = \"E\", \n    begin = 0.4, end = 0.8\n  ) + \n  theme_minimal(\n    base_size = 30, \n    base_family = \"Palatino\"\n  ) + \n  theme(legend.position = c(.15, .85))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-scatterplot-ex-adv-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n\n## Boxplot (box and whisker plot) {.smaller}\n\n::: {.panel-tabset}\n\n### Beginner\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Try a different geom\nggplot(\n  data = new_data, \n  mapping = aes(x = group, y = score)\n) + \n  geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-boxplot-ex-beg-1.png){width=100%}\n:::\n:::\n\n\n### Intermediate\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Adjust colors, new theme\nggplot(new_data) + \n  aes(x = group, y = score, fill = group) + \n  geom_boxplot() + \n  scale_fill_viridis_d(begin = 0.3, end = 0.8) + \n  theme_classic(base_size = 30) + \n  theme(legend.position = c(0.8, 0.85))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-boxplot-ex-int-1.png){width=100%}\n:::\n:::\n\n\n### Advanced\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Overlay raw data\nggplot(new_data) + \n  aes(x = group, y = score) + \n  geom_boxplot(aes(fill = group), show.legend = F) + \n  geom_jitter(\n    height = 0, width = 0.2, \n    size = 4, alpha = 0.4\n  ) + \n  scale_fill_viridis_d(\n    name = NULL, \n    begin = 0.3, end = 0.8\n  ) + \n  labs(x = NULL) + \n  theme_classic(base_size = 30) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-boxplot-ex-adv-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n## {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/rstats/memes/rstats_iqr.png\" background-size=\"contain\" data-menu-title=\"What's a boxplot anyway?\"}\n\n## A better way... point estimate + spread {.smaller}\n\n::: {.panel-tabset}\n\n### Beginner\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Point estimate can be mean, median, mode, \n# Spread can be SD, SE, 95% CI, etc.\nggplot(\n  data = new_data, \n  mapping = aes(x = group, y = score) \n) + \n  stat_summary(\n    fun.data = mean_sdl, \n    geom = 'pointrange', \n    size = 2, \n    linewidth = 2\n  ) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-point-estimate-spread-ex-beg-1.png){width=100%}\n:::\n:::\n\n\n### Intermediate\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Customize, add caption\nggplot(new_data) + \n  aes(x = group, y = score) + \n  geom_point(alpha = 0.3, size = 4) + \n  stat_summary(\n    fun.data = mean_cl_boot, \n    geom = 'pointrange', \n    size = 4, \n    linewidth = 2\n  ) + \n  labs(caption = \"Mean Â±95% CI\") + \n  theme_minimal(base_size = 30)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-point-estimate-spread-ex-int-1.png){width=100%}\n:::\n:::\n\n\n### Advanced\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Customize points and gridlines, add jitter\nggplot(new_data) + \n  aes(x = group, y = score) + \n  geom_jitter(\n    height = 0, width = 0.2, \n    alpha = 0.3, size = 4\n  ) + \n  stat_summary(\n    aes(fill = group), \n    fun.data = mean_se, \n    geom = 'pointrange', \n    size = 3, linewidth = 2, \n    pch = 21, show.legend = F\n  ) + \n  labs(y = \"Score\", x = NULL, caption = \"Mean Â±SE\") + \n  scale_fill_viridis_d(\n    option = \"A\", begin = 0.2, end = 0.6\n  ) + \n  theme_minimal(\n    base_size = 30, base_family = \"Palatino\"\n  ) + \n  theme(\n    axis.title.y = element_text(size = rel(0.9), hjust = 0.95),\n    axis.title.x = element_text(size = rel(0.9), hjust = 0.95),\n    panel.grid.major = element_line(color = 'grey80', linewidth = 0.15),\n    panel.grid.minor = element_line(color = 'grey80', linewidth = 0.15)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-point-estimate-spread-ex-adv-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n## Faceting\n\n- What about when we want to see more factors at once?\n\n- For example, what if we want to see **score** as a function of **proficiency** and **age**?\n\n- We use `facet_wrap()` or `facet_grid()` to create facets\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  data = new_data, \n  mapping = aes(x = proficiency, y = score)\n) + \n  facet_grid(. ~ age) + \n  geom_point()\n```\n:::\n\n\n## {data-title-menu=\"Faceting ex. 1\"}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  data = new_data, \n  mapping = aes(x = proficiency, y = score)\n) + \n  facet_grid(. ~ age) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-shapes-ex1-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## {data-title-menu=\"Faceting ex. 2\"}\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(\n  data = new_data, \n  mapping = aes(\n    x = age, y = score\n  )\n) + \n  facet_grid(group ~ .) + \n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-shapes-ex2-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n## More exercises {.smaller}\n\nUsing `new_data`, create the following\n\n- a boxplot with a variable mapped to the `fill` aesthetic\n\n- a boxplot with a variable mapped to the `color` aesthetic and a horizontal facet\n\n- a scatterplot with a regression line (see `?geom_smooth`)\n\n- a scatterplot with a regression line (see `?geom_smooth`) and a categorical factor (try the aesthetic `shape`)\n\n- a histogram of `proficiency`\n\n- What does `geom_violin()` do? What geom can it replace?\n\n\n## [Next level... raw data + model estimates]{.emph} {.smaller background-color=\"black\"}\n\n\n::: {.cell}\n\n:::\n\n\nLet's fit a model. \n\n::: {.cell}\n\n```{.r .cell-code}\n# Load some additional libraries\nlibrary(\"brms\"); library(\"emmeans\"); library(\"tidybayes\")\n\n# Fit bayesian regression model\nmod <- brm(formula = score ~ proficiency, family = Beta(), data = new_data)\n```\n:::\n\n\nNow we plot the raw data and the posterior predictive distribution\n\n::: {.cell}\n\n```{.r .cell-code}\nemmeans(\n  object = mod, \n  specs = ~ proficiency, \n  at = list(proficiency = seq(-2.5, 2.5, 0.1)), \n  epred = T\n) |> \n  gather_emmeans_draws() |> \n  filter(.draw < 300) |> \n  ggplot() + \n  aes(x = proficiency, y = .value) + \n  geom_line(aes(group = .draw), alpha = 0.1) + \n  stat_summary(fun = mean, geom = \"line\", color = \"#cc0033\", linewidth = 2) + \n  geom_point(\n    data = new_data, aes(y = score), \n    size = 3, pch = 21, fill = \"grey30\"\n    ) +\n  labs(\n    y = \"Score\", x = \"Proficiency\", \n    title = \"Scores as a function of proficiency\", \n    subtitle = \"300 draws from the posterior predictive distribution\"\n  ) + \n  ggdark::dark_theme_minimal(base_size = 18, base_family = \"Palatino\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/model-est-brm-plot-1.png){width=100%}\n:::\n:::\n\n\n## {data-menu-title=\"Raw data + model estimates ex\" background-color=\"black\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/model-est-brm-plot-1.png){width=100%}\n:::\n:::\n\n\n\n\n\n\n# Review {.transition}\n\n## Good principles \n\n- Remember ðŸ’©\n\n- Colorblind friendly palettes (e.g., [viridis](https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html))\n\n- Highlight important things\n\n- Help your target audience (reader)\n\n- Plot raw data, and statistical summary or model estimates whenever possible\n\n## Bad principles (according to the internet)\n\n::::{.columns}\n:::{.column width=\"50%\"}\n- Plots without context\n- Illegible fonts\n- A line graph with unordered x-axis\n- A legend with a zillion categories\n- A pie chart\n- Axis with scientific notation\n:::\n\n:::{.column width=\"50%\"}\n- Uninterpretable variable names\n- Dual y-Axis\n- Bar plots that could be boxplots\n- Non-color blind friendly color scales\n- Angled text\n:::\n::::\n\n\n\n\n\n# Take a bad plot and make it better {.transition visibility=\"uncounted\"}\n\n## {data-menu-title=\"Bad plots (revisited)\"}\n\n::: {.r-stack}\n![](./assets/img/bad_plot_1){width=\"750\" height=\"650\"}\n\n![](./assets/img/bad_plot_0){.fragment width=\"900\" height=\"650\"}\n\n![](./assets/img/bad_plot_2){.fragment width=\"1000\" height=\"650\"}\n:::\n\n\n\n\n\n\n# Wrapping up {visibility=\"uncounted\"}\n\n## Help! (resources) {.transition}\n\n- [SimplPoints (Timo Roettger youtube channel))](https://www.youtube.com/@simplpoints/videos)\n\n- [Data Visualization with R (course)](https://datavizf23.classes.andrewheiss.com/syllabus.html)\n\n- [The Truthful Art: Data, Charts, and Maps for Communication](https://www.amazon.com/Truthful-Art-Data-Charts-Communication/dp/0321934075)\n\n- [Data Visualization: A Practical Introduction](http://socviz.co/)\n\n- [Fundamentals of Data Visualization](https://serialmentor.com/dataviz/)\n\n::: notes\n@healy2018data\n@cairo2016truthful\n@wilke2019fundamentals\n:::\n\n## Thanks! {.final visibility=\"uncounted\"}\n\n![](https://a.espncdn.com/combiner/i?img=/i/teamlogos/ncaa/500/164.png){.absolute top=\"0\" right=\"0\" width=\"55\" height=\"55\"}\n\n</br>\n\n### Materials available here: \n\n### [bit.ly/psllt_2023](https://bit.ly/psllt_2023)\n\n|                                                                             |                                    |\n|----------------------------------------------------------------------------:|:-----------------------------------|\n|   <a href='mailto:joseph.casillas@rutgers.edu'>{{< fa solid envelope >}}</a>|joseph.casillas@rutgers.edu         |\n| <a href='www.jvcasillas.com'>{{< fa solid link >}}</a>|www.jvcasillas.com |\n|         <a href='https://twitter.com/jvcasill'>{{< fa brands twitter >}}</a>|\\@jvcasill                           |\n|         <a href='https://github.com/jvcasillas'>{{< fa brands github >}}</a>|\\@jvcasillas                         |\n\n: {tbl-colwidths=\"[25,75]\"}\n\n## References {visibility=\"uncounted\"}\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}