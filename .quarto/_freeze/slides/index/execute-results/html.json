{
  "hash": "b81e3b320e160883bb32b12273c353fb",
  "result": {
    "markdown": "---\ntitle: \"Data visualization for linguists\"\nsubtitle: \"\"\nauthor: \"Joseph V. Casillas | Rutgers University\"\ninstitute: \"14th Pronunciation in Second Langauge Learning and Teaching<br>Purdue University\"\ndate: \"2023/09/06 (Last update: 2023-09-05)\"\nformat: rutgers-revealjs\nengine: knitr\n---\n\n\n\n\n## Follow along\n\n::::: {layout=\"[[-1], [1], [-1]]\"}\n:::: {.columns}\n::: {.column width=\"33%\"}\n:::\n::: {.column width=\"33%\"}\n\n{{< qrcode www.jvcasillas.com qrsite width=300 height=300 colorDark='#cc0033' colorLight='#fff' >}}\n\n\n:::\n::: {.column width=\"33%\"}\n:::\n::::\n:::::\n\n---\n\n\n\n\n\n\n## How to use this workshop\n\n. . .\n\n::: {.r-fit-text}\nDo you know R?\n:::\n\n. . .\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n[Yes]{style=\"color: blue;\"}\n\n- Follow along, do examples\n- Watch\n- Both (as attention allows)\n:::\n\n::: {.column width=\"50%\"}\n[No]{.emph}\n\n- Watch\n- Come back when time and resources allow\n:::\n::::\n\n---\n\n\n\n\n\n\n## {.transition auto-animate=\"true\" #goals-1-id data-menu-title=\"Goals\"}\n\n[Goals]{.emph}\n\n::: {style=\"margin-top: 200px; font-size: 1.25em; color: #fff;\"}\nmake elegant, truthful plots  \n:::\n\n## {.transition auto-animate=\"true\" #goals-2-id data-menu-title=\"Goals\"}\n\n[Goals]{.emph}\n\n::: {style=\"margin-top: 70px; font-size: 1em; color: #B0B0B0;\"}\nmake elegant, truthful plots\n:::\n::: {style=\"margin-top: 71px; font-size: 1.5em; color: #fff;\"}\nhelp reader understand data\n:::\n\n## {.transition auto-animate=\"true\" #goals-3-id data-menu-title=\"Goals\"}\n\n[Goals]{.emph}\n\n::: {style=\"margin-top: 60px; font-size: 1em; color: #C0C0C0;\"}\nmake elegant, truthful plots\n:::\n::: {style=\"margin-top: 10px; font-size: 1em; color: #C0C0C0;\"}\nhelp reader understand data\n:::\n::: {style=\"margin-top: 10px; font-size: 1.5em; color: #fff;\"}\nmake process repeatable, shareable\n:::\n\n\n\n\n\n\n## Goals (today) {auto-animate=\"true\" #goals-today-1-id data-menu-title=\"Goals today\"}\n\n::: {style=\"margin-top: 200px; font-size: 1.5em;\"}\nget you started making elegant, truthful plots\n:::\n\n## Goals (today) {auto-animate=\"true\" #goals-today-2-id data-menu-title=\"Goals today\"}\n\n::: {style=\"margin-top: 70px; font-size: 1.5em; color: #D0D0D0;\"}\nget you started making elegant, truthful plots\n:::\n::: {style=\"margin-top: 71px; font-size: 1.5em;\"}\ndiscuss pitfalls, bad practices\n:::\n\n## Goals (today) {auto-animate=\"true\" #goals-today-3-id data-menu-title=\"Goals today\"}\n\n::: {style=\"margin-top: 60px; font-size: 1.5em; color: #D0D0D0;\"}\nget you started making elegant, truthful plots\n:::\n::: {style=\"margin-top: 20px; font-size: 1.5em; color: #D0D0D0;\"}\ndiscuss pitfalls, bad practices\n:::\n::: {style=\"margin-top: 20px; font-size: 1.5em;\"}\nprovide resources to help you continue learning\n:::\n\n\n\n\n\n# {.transition}\n\nJust use a table...  \nthe data speaks for itself\n\n# {background-color=\"black\" background-image=\"./assets/img/dino_data.gif\" background-size=\"contain\"}\n\n::: footer\n[datasaurus: same stats, different graph](https://www.research.autodesk.com/publications/same-stats-different-graphs/)\n:::\n\n# {.transition}\n\n\"Stats don't lie, but liars use stats\"  \n(same idea)\n\n<!--\nwho said this?\n-->\n\n\n\n\n\n\n# {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/rstats/memes/os_heartbreak.png\"}\n\n<!--\ngetting good takes time\n  be patient\n  be kind to yourself\n  do the best you can at the time\n-->\n\n# {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/general/memes/sucking1.png\" background-size=90%}\n\n<!--\nits ok to suck\n-->\n\n---\n\n\n\n\n\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-goals-1-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-goals-2-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-goals-3-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-goals-4-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-goals-5-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-goals-6-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-goals-7-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-goals-8-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-goals-9-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-goals-10-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n\n\n\n\n\n# {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/general/memes/draw_owl.png\" background-size=65%}\n\n---\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-flexibility-difficulty-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n---\n\n\n\n\n\n\nugliest plot in the world\n\n---\n\nprinciples of graphic design\n  - CRAP (contrast, alignment, repetition, proximity)\n  - Contrast: two things aren't the same, then make them very different\n    - fonts (family, weight, size), colors (complex, accessibility for color blindness, color.adobe.com), shapes\n  - Repetition: repeat things throughout doc, pres., etc.\n    - colors palettes, fonts (families, weights, sizes), other graphical elements (alignments, etc.)\n  - Alignment: everything on page/screen/plot has visual connection with something else on page/screen/plot\n    - use guidelines to check\n  - Proximity: group related items together\n    - less applicable to dataviz\n  - learnable, takes practice\n\n---\n\ncommon types of plots\n\npie charts\nbar graphs\nhistorgrams, density plots\nboxplots\nscatterplots\nheatmaps\netc.\n\n---\n\nprinciples of grammar of graphics\n  - map data to aesthetics\n\n---\n\nGoG applied, ggplot2\n  data\n  aesthetics\n  geoms\n  scales\n  facets\n  coordinates\n  labels\n  theme\n\n---\n\ngood principles (remember crap)\n  colors\n  highlight important things\n  help audience (reader)\n\n---\n\nbad principles\n\n---\n\npractical examples\n  take a bad plot and make it better\n\n---\n\nHelpful resources\n\n- https://datavizf23.classes.andrewheiss.com/syllabus.html\n- Alberto Cairo, The Truthful Art: Data, Charts, and Maps for Communication (Berkeley, California: New Riders, 2016).\n- Kieran Healy, Data Visualization: A Practical Introduction (Princeton: Princeton University Press, 2018), http://socviz.co/\n- Claus E. Wilke, Fundamentals of Data Visualization (Sebastopol, California: Oâ€™Reilly Media, 2018), https://serialmentor.com/dataviz/\n- \n\n---\n\n\n\n\n\n\n\n<!--\n\n\n\nbackground-color: black\nbackground-image: url(https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/tidyverse.png), url(https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png)\nbackground-size: 500px, 250px\nbackground-position: 50% 50%, 5% 50%\n\n\n---\nclass: title-slide-section-grey, center, middle\n\n# Data visualization 101\n\n.big[Plotting with `ggplot`]\n\n---\n\n\n# Data visualization 101\n\n### Basic plot types\n\n.large[\n\n.pull-left[\n\n- Scatterplots\n\n- Bargraph\n\n- Boxplots\n\n- Point estimate + spread\n\n]\n\n]\n\n--\n\n.pull-right[\n\n- Imagine we are interested in learning more about gas mileage. \n\n- We have the `mtcars` dataset that will allow us to look at miles per gallon \n(**mpg**), engine displacement (**disp**), and transmission type (**am**)\n\n- **mpg** and **disp** are continuous variables, **am** is categorical\n\n]\n\n\n---\n\n# Data visualization 101\n\n### Scatterplot\n\n- When you have two continuous variables\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/scatterplot-ex-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n???\n\n```\nmtcars %>%\n  ggplot(., aes(x = disp, y = mpg, fill = factor(am))) + \n    geom_point(pch = 21, size = 2)  + \n    scale_fill_brewer(palette = \"Set2\", name = '', \n                      labels = c('Automatic', 'Manual')) + \n    theme_grey(base_size = 18, base_family = 'Times')\n```\n\n---\n\n# Data visualization 101\n\n### Bargraph\n\n- Please never make a bargraph\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/bargraph-ex-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n???\n\n```\nmtcars %>%\n  group_by(am) %>% \n  summarize(mean_mpg = mean(mpg)) %>% \n  ggplot(., aes(x = factor(am), y = mean_mpg, fill = factor(am))) + \n    geom_bar(stat = 'identity') + \n    ylim(0, 40) + \n    xlab('') + \n    scale_x_discrete(breaks = c(0, 1), labels = c('Automatic', 'Manual')) + \n    scale_fill_brewer(palette = \"Set2\", name = '', \n                      labels = c('Automatic', 'Manual')) + \n    theme_grey(base_size = 18, base_family = 'Times')\n```\n\n\n---\nbackground-color: black\nbackground-image: url(https://raw.githubusercontent.com/jvcasillas/media/master/rstats/memes/rstats_bargraphs.png)\nbackground-size: contain\nbackground-position: 100% 50%\n\n# Data visualization 101\n\n### Bargraph\n\n---\n\n\n# Data visualization 101\n\n### Boxplot (box and whisker plot)\n\n- Better option than bargraph\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/boxplot-ex-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n???\n\n```\nmtcars %>%\n  ggplot(., aes(x = factor(am), y = mpg, fill = factor(am))) + \n    geom_boxplot() + \n    ylim(0, 40) + \n    xlab('') + \n    scale_x_discrete(breaks = c(0, 1), labels = c('Automatic', 'Manual')) + \n    scale_fill_brewer(palette = \"Set2\", name = '', \n                      labels = c('Automatic', 'Manual')) + \n    theme_grey(base_size = 18, base_family = 'Times')\n```\n\n\n---\nbackground-color: black\nbackground-image: url(https://raw.githubusercontent.com/jvcasillas/media/master/rstats/memes/rstats_iqr.png)\nbackground-size: contain\n\n---\n\n\n# Data visualization 101\n\n### Point estimate + spread\n\n- Point estimate can be mean, median, mode, \n- Spread can be SD, SE, 95% CI, etc.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/point-estimate-ex-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n???\n\n```\nmtcars %>%\n  ggplot(., aes(x = factor(am), y = mpg, fill = factor(am))) + \n    stat_summary(fun.data = mean_sdl, geom = 'pointrange', pch = 21, \n                 size = 1.5) + \n    ylim(0, 40) + \n    xlab('') + \n    scale_x_discrete(breaks = c(0, 1), labels = c('Automatic', 'Manual')) + \n    scale_fill_brewer(palette = \"Set2\", name = '', \n                      labels = c('Automatic', 'Manual')) + \n    theme_grey(base_size = 18, base_family = 'Times')\n```\n\n\n\n---\nclass: title-slide-section-grey, center, middle\n\n# What you need to know\n\n.big[A grammar of graphics]\n\n---\n\n\n# ggplot2\n\n### Overview\n\n- Written by Hadley Wickham when he was a graduate student at Iowa State\n\n- Automatically deals with spacings, text, titles but also allows you to annotate by \"adding\"\n\n- Plots are built up in layers \n\n- Plot the data, overlay a summary, meta data and annotation\n\n---\n\n# ggplot2\n\n### Components\n\n- Works with a dataframe\n\n- aesthetic mappings: how data are mapped to color, size\n\n- geoms: geometric objects like points, lines, shapes\n\n- stats: statistical transformations\n\n- facets: for conditional plots\n\n---\n\n# ggplot2\n\n### It starts with data\n\n- We will continue using the `mtcars` dataframe\n\n- Fire up RStudio, load the `tidyverse` and take a look at `mtcars`\n\n- Try using `glimpse(mtcars)`, , `head(mtcars)`, `dim(mtcars)`, and `summary(mtcars)`\n\n- What kind of information did you learn about the dataframe?\n\n---\n\n# ggplot2\n\n### It starts with data\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 32\nColumns: 11\n$ mpg  <dbl> 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,â€¦\n$ cyl  <dbl> 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,â€¦\n$ disp <dbl> 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16â€¦\n$ hp   <dbl> 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180â€¦\n$ drat <dbl> 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,â€¦\n$ wt   <dbl> 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.â€¦\n$ qsec <dbl> 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18â€¦\n$ vs   <dbl> 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,â€¦\n$ am   <dbl> 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,â€¦\n$ gear <dbl> 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,â€¦\n$ carb <dbl> 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,â€¦\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 32 11\n```\n:::\n:::\n\n\n---\n\n# ggplot2\n\n### It starts with data\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n                    mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4          21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag      21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710         22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive     21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout  18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant            18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360         14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D          24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230           22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280           19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C          17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SE         16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL         17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC        15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\n```\n:::\n:::\n\n\n---\n\n# ggplot2\n\n### It starts with data\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n      mpg             cyl             disp             hp       \n Min.   :10.40   Min.   :4.000   Min.   : 71.1   Min.   : 52.0  \n 1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   1st Qu.: 96.5  \n Median :19.20   Median :6.000   Median :196.3   Median :123.0  \n Mean   :20.09   Mean   :6.188   Mean   :230.7   Mean   :146.7  \n 3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   3rd Qu.:180.0  \n Max.   :33.90   Max.   :8.000   Max.   :472.0   Max.   :335.0  \n      drat             wt             qsec             vs        \n Min.   :2.760   Min.   :1.513   Min.   :14.50   Min.   :0.0000  \n 1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   1st Qu.:0.0000  \n Median :3.695   Median :3.325   Median :17.71   Median :0.0000  \n Mean   :3.597   Mean   :3.217   Mean   :17.85   Mean   :0.4375  \n 3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   3rd Qu.:1.0000  \n Max.   :4.930   Max.   :5.424   Max.   :22.90   Max.   :1.0000  \n       am              gear            carb      \n Min.   :0.0000   Min.   :3.000   Min.   :1.000  \n 1st Qu.:0.0000   1st Qu.:3.000   1st Qu.:2.000  \n Median :0.0000   Median :4.000   Median :2.000  \n Mean   :0.4062   Mean   :3.688   Mean   :2.812  \n 3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000  \n Max.   :1.0000   Max.   :5.000   Max.   :8.000  \n```\n:::\n:::\n\n\n---\n\n# ggplot2\n\n### It starts with data\n\n- We will start all of our plots in the same way... using the dataframe and \nthe pipe operator (**%>%**) like this: \n\n--\n\n\n::: {.cell}\n\n:::\n\n\n--\n\n- Notice that I have commented my code\n\n- The pipe operator sends whatever is on the left of the pipe (`mtcars`) to whatever is on the right side (`ggplot`)\n\n- Specifically, it sends whatever is on the left to the following **.**\n\n- As is, this code won't do anything yet\n\n---\n\n# ggplot2\n\n### Aesthetics (aes)\n\n- aesthetic mappings: how data are mapped to color, size, and **axis**\n- Let's update our code: \n\n\n::: {.cell}\n\n:::\n\n\n--\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n---\n\n# ggplot2\n\n### Geometric objects (geom_)\n\n- Whenever you want to make a plot you have to think about what kind of geometric object makes sense for your needs. What do we need here?\n\n--\n\n\n::: {.cell}\n\n:::\n\n\n--\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n---\n\n# ggplot2\n\n### Geometric objects (geom_)\n\n- There are many types of geoms\n  - `geom_point()`\n  - `geom_smooth()`\n  - `geom_hist()`\n  - `geom_bar()`\n  - `geom_boxplot()`\n  - etc. \n\n- Exercise\n  - Recall that `mtcars` has a lot of variables (see `glimpse(mtcars)`)\n  - Try swapping other variables for x and y\n  - Add a smoother to the plot (`geom_smooth()`)\n  - Add more aesthetics (try `color` and `shape`). What happens?\n  - Add a geom to make a boxplot\n\n---\n\n# ggplot2\n\n### Statistical transformations (stat_)\n\n- We can use the `stat_summary()` function to calculate a value and overlay it \non the plot\n\n.pull-left[\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>%\n  ggplot(., aes(x = am, y = mpg)) + \n    stat_summary(fun.data = mean_sdl, \n                 geom = 'pointrange')\n```\n:::\n\n\n]\n\n\n.pull-right[\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n]\n\n---\n\n# ggplot2\n\n### Faceting\n\n- What about when we want to see more factors at once?\n- For example, what if we want to see **mpg** as a function of **am** and **cyl**?\n\n--\n\n#### Solution 1a\n\n.pull-left[\n\n\n::: {.cell}\n\n:::\n\n\n]\n\n.pull-right[\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-16-1.png){width=100%}\n:::\n:::\n\n\n]\n\n---\n\n# ggplot2\n\n### Faceting\n\n- What about when we want to see more factors at once?\n- For example, what if we want to see **mpg** as a function of **am** and **cyl**?\n\n#### Solution 1b\n\n.pull-left[\n\n\n::: {.cell}\n\n:::\n\n\n]\n\n.pull-right[\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-17-1.png){width=100%}\n:::\n:::\n\n\n]\n\n---\n\n# ggplot2\n\n### Faceting\n\n- What about when we want to see more factors at once?\n- For example, what if we want to see **mpg** as a function of **am** and **cyl**?\n\n#### Solution 2\n\n.pull-left[\n\n\n::: {.cell}\n\n:::\n\n]\n\n.pull-right[\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-18-1.png){width=100%}\n:::\n:::\n\n\n]\n\n---\n\n# More exercises\n\n### Using `mtcars`, create the following\n\n- a boxplot with a variable mapped to the `fill` aesthetic\n\n- a boxplot with a variable mapped to the `color` aesthetic and a horizontal facet\n\n- a scatterplot with a regression line (see `?geom_smooth`)\n\n- a scatterplot with a regression line (see `?geom_smooth`) and a categorical factor (try the aesthetic `shape`)\n\n- a histogram of `mpg`\n\n- What does `geom_violin()` do? What geom can it replace?\n\n\n---\nclass: title-slide-final, middle\nbackground-image: url(https://github.com/jvcasillas/ru_xaringan/raw/master/img/logo/ru_shield.png), url(https://www.r-project.org/Rlogo.png)\nbackground-size: 55px, 100px\nbackground-position: 9% 15%, 89% 15%\n\n# Getting help\n\n## If you have problems using ggplot2\n## ask for help in the slack channel\n\n### You can find some very basic tutorials related to \n### plotting in R [here][here]\n\n[here]: http://www.jvcasillas.com/base_lattice_ggplot/\n\n\n-->\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}