{
  "hash": "ccebd3383aeece9dd6ad4bba7c876339",
  "result": {
    "markdown": "---\ntitle: \"Data visualization for linguists\"\nsubtitle: \"\"\nauthor: \"Joseph V. Casillas | Rutgers University\"\ninstitute: \"14th Pronunciation in Second Langauge Learning and Teaching<br>Purdue University\"\ndate: \"2023/09/06 (Last update: 2023-09-06)\"\nformat: rutgers-revealjs\nengine: knitr\nbibliography: ../bib/refs.bib\n---\n\n\n\n\n## Follow along\n\n::::: {layout=\"[[-1], [1], [-1]]\"}\n:::: {.columns}\n::: {.column width=\"33%\"}\n:::\n::: {.column width=\"33%\"}\n\n{{< qrcode https://www.jvcasillas.com/dv4ss/slides/ qrsite width=300 height=300 colorDark='#cc0033' colorLight='#fff' >}}\n\n\n:::\n::: {.column width=\"33%\"}\n:::\n::::\n:::::\n\n---\n\n\n\n\n\n\n## How to use this workshop\n\n. . .\n\n::: {.r-fit-text}\nDo you know R?\n:::\n\n. . .\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n[Yes]{style=\"color: blue;\"}\n\n- Follow along, do examples\n- Watch\n- Both (as attention allows)\n:::\n\n::: {.column width=\"50%\"}\n[No]{.emph}\n\n- Watch\n- Come back when time and resources allow\n:::\n::::\n\n\n\n\n\n\n\n# Goals {.transition}\n\n## {.transition data-menu-title=\"Goals (as researchers)\"}\n\n[Goals (as researchers)]{.emph}\n\n::: {.r-fit-text}\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\nmake elegant, truthful plots\n:::\n:::\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\nhelp reader understand data\n:::\n:::\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\nmake process repeatable, shareable\n:::\n:::\n\n:::\n\n## Goals (today)\n\n::: {.r-fit-text}\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\nget you started making elegant, <br>truthful plots\n:::\n:::\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\ndiscuss pitfalls, bad practices\n:::\n:::\n\n::: {.fragment .fade-up}\n::: {.fragment .semi-fade-out}\nprovide resources to help you <br>continue learning\n:::\n:::\n\n:::\n\n\n\n\n\n\n\n# {.transition data-menu-title=\"Speak for yourself\"}\n\nJust use a table...  \nthe data speaks for itself...\n\n## {background-color=\"black\" background-image=\"./assets/img/dino_data.gif\" background-size=\"contain\" data-menu-title=\"The datasaurus\"}\n\n::: footer\n[datasaurus: same stats, different graph](https://www.research.autodesk.com/publications/same-stats-different-graphs/)\n:::\n\n## {.transition data-menu-title=\"Liars\"}\n\n<br><br><br>\n\n\"Stats don't lie, but liars use stats\"  \n\"The numbers don't lie, but liars use numbers\"  \n[(same idea)]{style=\"color: grey;\"}\n\n\n\n\n\n\n# It's not easy...\n\n## {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/rstats/memes/os_heartbreak.png\" data-menu-title=\"Be kind\"}\n\n::: {.notes}\n- getting good takes time\n- be patient\n- be kind to yourself\n- do the best you can at the time\n:::\n\n## {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/general/memes/sucking1.png\" background-size=90% data-menu-title=\"Sucking...\"}\n\n::: {.notes}\nits ok to suck\n:::\n\n## {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/general/memes/draw_owl.png\" background-size=65% data-menu-title=\"Drawing the owl\"}\n\n## {data-menu-title=\"Choose your fighter\"}\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/p-flexibility-difficulty-1.png){width=100%}\n:::\n:::\n\n\n:::\n\n## {data-menu-title=\"Learning process\"}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n::: {.r-stack}\n![](./index_files/figure-revealjs/p-goals-1-1){width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-2-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-3-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-4-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-5-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-6-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-7-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-8-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-9-1){.fragment width=\"100%\" height=\"100%\"}\n\n![](./index_files/figure-revealjs/p-goals-10-1){.fragment width=\"100%\" height=\"100%\"}\n:::\n:::\n\n## {background-image=\"./assets/img/bad_plot_0.png\" background-size=\"contain\" data-menu-title=\"The ugliest plot in the world\"}\n\n\n\n\n\n\n\n# Some principles of graphic design\n\n[ðŸ’©]{style=\"font-size: 2em;\"}\n\n## CRAP ðŸ’©\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n[C]{.emph style=\"font-size: 2.5em;\"}[ontrast]{style=\"font-size: 2.5em;\"}  \n[R]{.emph style=\"font-size: 2.5em;\"}[epetition]{style=\"font-size: 2.5em;\"}  \n[A]{.emph style=\"font-size: 2.5em;\"}[lignment]{style=\"font-size: 2.5em;\"}  \n[P]{.emph style=\"font-size: 2.5em;\"}[roximity]{style=\"font-size: 2.5em;\"}\n:::\n::: {.column width=\"50%\"}\n![](./assets/img/non_designers.png){.absolute top=100 right=10 width=\"350\" height=\"500\"}\n\n[@williams2015]{.absolute bottom=5 right=10}\n:::\n::::\n\n## Contrast\n\nIf two things aren't the same, make them *very* different\n\n. . .\n\n- Colors\n  - complex\n  - accessibility for color blindness (color.adobe.com)\n\n- Fonts\n  - weight\n  - size\n  - family\n\n- Shapes\n\n\n## {data-menu-title=\"Contrast ex.\"}\n\n::::: {layout=\"[[-1], [1], [-1]]\"}\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/contrast-ex1-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/contrast-ex2-1.png){width=100%}\n:::\n:::\n\n:::\n::::\n:::::\n\n---\n\n## Repetition\n\nRepeat *themes* throughout doc, presentation, article, etc.\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n<br>\n\n- Colors palettes\n- Fonts (families, weights, sizes)\n- Other graphical elements (alignments, etc.)\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/contrast-repeat-1.png){width=100%}\n:::\n:::\n\n:::\n::::\n\n## Alignment\n\nElements on page/screen/plot have visual connection with something else on page/screen/plot\n\n::: {.r-stack}\n![](./assets/img/alignment_0.png){.fragment width=\"70%\" height=\"70%\" .absolute top=205 right=200}\n\n![](./assets/img/alignment_1.png){.fragment width=\"70%\" height=\"70%\" .absolute top=205 right=200}\n\n![](./assets/img/alignment_2.png){.fragment width=\"70%\" height=\"70%\" .absolute top=205 right=200}\n:::\n\n::: footer\nHeiss (2023)\n:::\n\n## Proximity\n\nGroup related items together\n\n- Focus on document layout\n\n- Probably less applicable to dataviz\n\n## {.transition data-menu-title=\"You can learn to CRAP ðŸ’©\"}\n\n<br><br><br><br>\n[You can learn to CRAP ðŸ’©]{style=\"font-size: 1.5em;\"}\n\n::: notes\nlearnable\ntakes practice\n:::\n\n\n\n\n\n\n\n# Example plots\n\n## Common types of plots\n\n- Pie charts\n- Bar graphs\n- Boxplots  \n- Historgrams, density plots\n- Scatterplots  \n- Heatmaps\n- Etc.\n\n## Pie charts {background-image=\"./assets/img/plots_pie.png\" background-size=contain background-color=\"black\"}\n\n## Bar graphs {visibility=\"uncounted\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/bargraph-ex-1.png){width=100%}\n:::\n:::\n\n\n## {background-image=\"https://raw.githubusercontent.com/jvcasillas/media/master/rstats/memes/rstats_bargraphs.png\" background-size=\"50%\" background-color=\"black\" data-menu-title=\"Bar graph push back\" visibility=\"uncounted\"}\n\n## Boxplots {visibility=\"uncounted\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/boxplot-ex-1.png){width=100%}\n:::\n:::\n\n\n## Historgrams, density plots {visibility=\"uncounted\"}\n\n::::: {layout=\"[[-1], [1], [-1]]\"}\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/histogram-ex-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/density-ex-1.png){width=100%}\n:::\n:::\n\n:::\n::::\n:::::\n\n## Scatterplots {visibility=\"uncounted\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/scatter-plot-ex-1.png){width=100%}\n:::\n:::\n\n\n## Heatmaps {visibility=\"uncounted\"}\n\n::: {.r-stack}\n![](./assets/img/plot_heatmap_0.png){.absolute top=150 right=60 width=\"80%\"}\n\n![](./assets/img/plot_heatmap_1.png){.fragment .absolute top=65 right=65 width=\"80%\"}\n:::\n\n\n\n\n\n\n\n\n# Grammar of graphics\n\n## What you need to know\n\n![](./assets/img/gog.png){.absolute top=100 right=0 height=75%}\n\n[@wilkinson2012grammar]{.absolute bottom=5 right=10}\n\nWe are interesting in mapping <br>**data** to **aesthetics**\n\n. . .\n\n[What is data?]{style=\"color: blue;\"}\n\n- a column(s) in a dataframe <br>(excel, .csv, .tsv, etc.)\n\n. . .\n\n[Aesthetics?]{style=\"color: blue;\"}\n\n- a visual property of a plot, <br>i.e., position, shape, color, etc.\n\n\n\n\n\n\n# {background-color=\"black\" data-menu-title=\"ggplot2\" background-image=\"https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/tidyverse.png\" background-size=\"45%\"}\n\n![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/ggplot2.png){.absulute top=400 left=0 width=\"20%\" height=\"20%\"}\n\n## {background-image=\"./assets/img/ggplot_layers.png\" background-size=\"contain\" data-menu-title=\"GoG applied - ggplot2\"}\n\n## ggplot2 overview\n\n- Written by Hadley Wickham when he was a graduate student at Iowa State\n\n- Automatically deals with spacings, text, titles but also allows you to annotate by \"adding\"\n\n- Plots are built up in layers \n\n- Plot the data, overlay a summary, meta data and/or annotation\n\n## Components\n\n- Works with a dataframe\n\n- aesthetic mappings: how data are mapped to coordinates, color, size, shape, etc.\n\n- geoms: geometric objects like points, lines, boxplots, etc. \n\n- stats: statistical transformations\n\n- facets: 'panels' for conditional plots\n\n## {data-menu-title=\"Back to the chicks...\"}\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/chicks-repeat-1.png){width=100%}\n:::\n:::\n\n:::\n\n## {data-menu-title=\"Data to aesthetic mapping\"}\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n| Data   | Aesthetic    | Geometry     |\n| :----- | :----------- | :----------- | \n| Time   | x-axis       | point, line  |\n| Weight | y-axis       | point, line  |\n| Chick  | point        | point, line  |\n| Diet   | color, shape | point, shape |\n\n:::\n\n## {data-menu-title=\"Aesthetic to geom mapping\"}\n\n::: {layout=\"[[-1], [1], [-1]]\"}\n\n| Data   | aes()        | geom_\\*    |\n| :----- | :----------- | :--------- | \n| Time   | x            | geom_point |\n| Weight | y            | geom_point |\n| Chick  | color        | geom_point |\n| Diet   | color, shape | geom_point + geom_line |\n\n:::\n\n## It starts with data\n\n- Let's take a look at a new dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlink <- url(\"https://github.com/jvcasillas/dv4ss/raw/main/misc/new_data.RDS\")\nnew_data <- readRDS(link)\n```\n:::\n\n\n- Try using `glimpse(new_data)` and `summary(new_data)`\n\n- What kind of information did you learn about the dataframe?\n\n## Get to know the data {.smaller}\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(new_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 32\nColumns: 3\n$ score       <dbl> 0.4510638, 0.4510638, 0.5276596, 0.4680851, 0.3531915, 0.3â€¦\n$ proficiency <dbl> 0.5675137, 0.5675137, 0.4739996, -0.9661175, -0.8351978, -â€¦\n$ group       <chr> \"bilingual\", \"bilingual\", \"bilingual\", \"monolingual\", \"monâ€¦\n```\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(new_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     score         proficiency         group          \n Min.   :0.0000   Min.   :-1.5646   Length:32         \n 1st Qu.:0.2138   1st Qu.:-0.9661   Class :character  \n Median :0.3745   Median : 0.1841   Mode  :character  \n Mean   :0.4124   Mean   : 0.0000                     \n 3rd Qu.:0.5277   3rd Qu.: 0.6049                     \n Max.   :1.0000   Max.   : 2.4939                     \n```\n:::\n:::\n\n:::\n::::\n\n\n\n\n\n\n# Plotting with `ggplot`\n\n## Basic plot types\n\n- histogram\n\n- Scatterplots\n\n- Boxplots\n\n- Point estimate + spread\n\n\n\n\n\n## Scatterplot\n\n- When you have two continuous variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>%\n  ggplot(., aes(x = disp, y = mpg, fill = factor(am))) + \n    geom_point(pch = 21, size = 2)  + \n    scale_fill_brewer(palette = \"Set2\", name = '', \n                      labels = c('Automatic', 'Manual')) + \n    theme_grey(base_size = 18, base_family = 'Times')\n```\n:::\n\n\n\n\n## Boxplot (box and whisker plot)\n\n- Better option than bargraph\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>%\n  ggplot(., aes(x = factor(am), y = mpg, fill = factor(am))) + \n    geom_boxplot() + \n    ylim(0, 40) + \n    xlab('') + \n    scale_x_discrete(breaks = c(0, 1), labels = c('Automatic', 'Manual')) + \n    scale_fill_brewer(palette = \"Set2\", name = '', \n                      labels = c('Automatic', 'Manual')) + \n    theme_grey(base_size = 18, base_family = 'Times')\n```\n:::\n\n\n\n---\n\nhttps://raw.githubusercontent.com/jvcasillas/media/master/rstats/memes/rstats_iqr.png\n\n\n\n## Point estimate + spread\n\n- Point estimate can be mean, median, mode, \n- Spread can be SD, SE, 95% CI, etc.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>%\n  ggplot(., aes(x = factor(am), y = mpg, fill = factor(am))) + \n    stat_summary(fun.data = mean_sdl, geom = 'pointrange', pch = 21, \n                 size = 1.5) + \n    ylim(0, 40) + \n    xlab('') + \n    scale_x_discrete(breaks = c(0, 1), labels = c('Automatic', 'Manual')) + \n    scale_fill_brewer(palette = \"Set2\", name = '', \n                      labels = c('Automatic', 'Manual')) + \n    theme_grey(base_size = 18, base_family = 'Times')\n```\n:::\n\n\n\n## Aesthetics (aes)\n\n- aesthetic mappings: how data are mapped to color, size, and **axis**\n- Let's update our code: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Call dataframe and 'pipe' into ggplot function\n# Add aesthetic mapping to x and y axis\nmtcars %>%  \n  ggplot(., aes(x = disp, y = mpg)) #<<\n```\n:::\n\n\n\n## Geometric objects (geom_)\n\n- Whenever you want to make a plot you have to think about what kind of geometric object makes sense for your needs. What do we need here?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Call dataframe and 'pipe' into ggplot function\n# Add aesthetic mapping to x and y axis\n# Add geometric object (geom_point)\nmtcars %>%  \n  ggplot(., aes(x = disp, y = mpg)) + # We 'add' a layer to the plot\n    geom_point() #<<\n```\n:::\n\n\n\n## Geometric objects (geom_)\n\n- There are many types of geoms\n  - `geom_point()`\n  - `geom_smooth()`\n  - `geom_hist()`\n  - `geom_bar()`\n  - `geom_boxplot()`\n  - etc. \n\n- Exercise\n  - Recall that `mtcars` has a lot of variables (see `glimpse(mtcars)`)\n  - Try swapping other variables for x and y\n  - Add a smoother to the plot (`geom_smooth()`)\n  - Add more aesthetics (try `color` and `shape`). What happens?\n  - Add a geom to make a boxplot\n\n\n## Statistical transformations (stat_)\n\n- We can use the `stat_summary()` function to calculate a value and overlay it \non the plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>%\n  ggplot(., aes(x = am, y = mpg)) + \n    stat_summary(fun.data = mean_sdl, \n                 geom = 'pointrange')\n```\n:::\n\n\n\n## Faceting\n\n- What about when we want to see more factors at once?\n- For example, what if we want to see **mpg** as a function of **am** and **cyl**?\n\n. . .\n\nSolution 1a\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>% \n  ggplot(., aes(x = am, y = mpg)) + \n    stat_summary(fun.data = mean_sdl, \n                 geom = 'pointrange') + \n    facet_grid(. ~ cyl) #<<\n```\n:::\n\n\n\n## Faceting\n\n- What about when we want to see more factors at once?\n- For example, what if we want to see **mpg** as a function of **am** and **cyl**?\n\nSolution 1b\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>% \n  ggplot(., aes(x = am, y = mpg)) + \n    stat_summary(fun.data = mean_sdl, \n                 geom = 'pointrange') + \n    facet_grid(cyl ~ .) #<<\n```\n:::\n\n\n\n## Faceting\n\n- What about when we want to see more factors at once?\n- For example, what if we want to see **mpg** as a function of **am** and **cyl**?\n\nSolution 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>% \n  ggplot(., aes(x = factor(am), y = mpg, \n                shape = factor(cyl))) +  #<<\n    stat_summary(fun.data = mean_sdl, \n                 geom = 'pointrange', \n                 position = position_dodge(0.5))\n```\n:::\n\n\n\n\n## More exercises\n\nUsing `mtcars`, create the following\n\n- a boxplot with a variable mapped to the `fill` aesthetic\n\n- a boxplot with a variable mapped to the `color` aesthetic and a horizontal facet\n\n- a scatterplot with a regression line (see `?geom_smooth`)\n\n- a scatterplot with a regression line (see `?geom_smooth`) and a categorical factor (try the aesthetic `shape`)\n\n- a histogram of `mpg`\n\n- What does `geom_violin()` do? What geom can it replace?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\ngood principles (remember crap)\n  colors\n  highlight important things\n  help audience (reader)\n\n---\n\nbad principles\n\n---\n\npractical examples\n  take a bad plot and make it better\n\n\n# Help! \n\n## Resources\n\n- https://datavizf23.classes.andrewheiss.com/syllabus.html\n- Alberto Cairo, The Truthful Art: Data, Charts, and Maps for Communication (Berkeley, California: New Riders, 2016).\n- Kieran Healy, Data Visualization: A Practical Introduction (Princeton: Princeton University Press, 2018), http://socviz.co/\n- Claus E. Wilke, Fundamentals of Data Visualization (Sebastopol, California: Oâ€™Reilly Media, 2018), https://serialmentor.com/dataviz/\n\n\n## Getting help\n\nIf you have problems using ggplot2\nask for help in the slack channel\n\nYou can find some very basic tutorials related to \nplotting in R [here][here]\n\n[here]: http://www.jvcasillas.com/base_lattice_ggplot/\n\n\n\n\n\n\n## This is the final slide {.final}\n\n![](https://a.espncdn.com/combiner/i?img=/i/teamlogos/ncaa/500/164.png){.absolute top=\"0\" right=\"0\" width=\"55\" height=\"55\"}\n\n</br>\n\n### you can add your email, twitter, github, etc. info here\n\nHere is an example:\n\n|                                                                             |                                    |\n|----------------------------------------------------------------------------:|:-----------------------------------|\n|   <a href='mailto:joseph.casillas@rutgers.edu'>{{< fa solid envelope >}}</a>|joseph.casillas@rutgers.edu         |\n| <a href='www.jvcasillas.com/quarto-rutgers-theme/'>{{< fa solid link >}}</a>|jvcasillas.com/quarto-rutgers-theme |\n|         <a href='https://twitter.com/jvcasill'>{{< fa brands twitter >}}</a>|\\@jvcasill                           |\n|         <a href='https://github.com/jvcasillas'>{{< fa brands github >}}</a>|\\@jvcasillas                         |\n\n: {tbl-colwidths=\"[25,75]\"}\n\n\n\n\n# References\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}